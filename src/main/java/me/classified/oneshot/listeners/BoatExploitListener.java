package me.classified.oneshot.listeners;
/*
 * AUTHOR: Classified
 * DISCORD: Classified#0001
 * DATE: 11/5/2020
 * PROJECT: OneShotCore
 */

import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.entity.EntitySpawnEvent;
import org.bukkit.event.player.PlayerInteractEvent;

public class BoatExploitListener implements Listener {

    @EventHandler
    public void onBoatSpawn(EntitySpawnEvent e){
        if(e.getEntityType() == EntityType.BOAT){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART_CHEST){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART_FURNACE){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART_HOPPER){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART_MOB_SPAWNER){
            e.getEntity().remove();
        }
        if(e.getEntityType() == EntityType.MINECART_TNT){
            e.getEntity().remove();
        }
    }

    @EventHandler
    public void onDispense(BlockDispenseEvent e){
        if(e.getItem().getType().toString().contains("MINECART") || e.getItem().getType().toString().toUpperCase().contains("BOAT")){
            e.setCancelled(true);
        }
    }

    @EventHandler
    public void onDispense(PlayerInteractEvent e){
        Player p = e.getPlayer();
        if(e.getAction() == Action.RIGHT_CLICK_BLOCK && p.getItemInHand().getType().toString().toUpperCase().contains("MINECART")){
            e.setCancelled(true);
        }
        if(e.getAction() == Action.RIGHT_CLICK_BLOCK && p.getItemInHand().getType().toString().toUpperCase().contains("BOAT")){
            e.setCancelled(true);
        }
    }

}
